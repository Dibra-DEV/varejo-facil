trigger:
  branches:
    include:
      - main

pool:
  name: vm-windows

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: '1. Instalar Node.js (20.x)'

  - script: |
      echo "Instalando dependências e buildando projeto..."
      npm install
      npm run build
      echo "Instalando PM2 globalmente..."
      npm install -g pm2
    displayName: '2. Build do projeto e Instalar PM2'

  # Etapa 3: Cópia robusta sem comentários CMD
  - script: |
      echo "Copiando build para pasta de deploy (C:\deploy\varejo-facil)"
      
      if not exist "C:\deploy\varejo-facil" mkdir "C:\deploy\varejo-facil"
      
      xcopy .\dist C:\deploy\varejo-facil /E /Y /I /C
    displayName: '3. Copiar build para VM (Script Robusto)'

  - script: |
      echo "Reiniciando app com PM2"
      pm2 delete varejo-facil --silent || true 
      
      pm2 start "cmd /c pm2 serve C:\deploy\varejo-facil 3000 --name varejo-facil --spa" --name varejo-facil-service --interpreter none
      pm2 save --force
    displayName: '4. Rodar app com PM2'

  # Etapa 5 (Diagnóstico): Força a listagem de arquivos após o build (em caso de falha da Etapa 3)
  - script: |
      echo "Conteúdo do diretório de build (Pós-Build):"
      dir /b
    displayName: '5. VERIFICAR PASTA DE BUILD'
    # Esta é a chave: permite que esta etapa execute mesmo se a Etapa 3 falhar
    continueOnError: true
