trigger:
  branches:
    include:
      - main

pool:
  name: vm-windows

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: '1. Instalar Node.js (20.x)'

  - script: |
      echo "Instalando dependências e buildando projeto..."
      npm install
      npm run build
      echo "Instalando PM2 globalmente..."
      npm install -g pm2
    displayName: '2. Build do projeto e Instalar PM2'

  # NOVA ETAPA: Diagnóstico para descobrir o nome real da pasta de build.
  - script: |
      echo "Conteúdo do Diretório de Trabalho Padrão ($(System.DefaultWorkingDirectory)): "
      # O comando 'dir /b' no Windows lista apenas arquivos e pastas
      dir /b
    displayName: '3. DIAGNÓSTICO: Listar Arquivos pós-Build'

  # Etapa 4: Copia a pasta de Build (assumindo 'dist' por enquanto) para o Staging
  - task: CopyFiles@2
    inputs:
      # Manteremos 'dist' aqui até você confirmar o nome correto da pasta
      sourceFolder: '$(System.DefaultWorkingDirectory)/dist' 
      contents: '**'
      targetFolder: '$(Build.ArtifactStagingDirectory)/app-build' 
      cleanTargetFolder: true
      overwrite: true 
    displayName: '4. Preparar Build (Staging)'

  # Etapa 5: Copia os arquivos do Staging (local seguro) para a VM
  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.ArtifactStagingDirectory)/app-build' 
      contents: '**'
      targetFolder: 'C:\deploy\varejo-facil'
      cleanTargetFolder: true
      overwrite: true 
    displayName: '5. Copiar build para VM'

  - script: |
      echo "Reiniciando app com PM2"
      pm2 delete varejo-facil --silent || true 
      pm2 start "cmd /c pm2 serve C:\deploy\varejo-facil 3000 --name varejo-facil --spa" --name varejo-facil-service --interpreter none
      pm2 save --force
    displayName: '6. Rodar app com PM2'
